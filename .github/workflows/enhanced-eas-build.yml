name: EAS Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build (android/ios/all)'
        required: true
        default: 'all'
        type: choice
        options:
          - android
          - ios
          - all
      profile:
        description: 'Build profile'
        required: true
        default: 'production'
        type: choice
        options:
          - development
          - preview
          - production
      skip_tests:
        description: 'Skip test suite'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: 20
  EXPO_CLI_VERSION: latest

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test & Lint
    if: ${{ !inputs.skip_tests }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check
        
      - name: Run tests (if available)
        run: |
          if npm run | grep -q "test"; then
            npm test
          else
            echo "No test script found, skipping tests"
          fi
        continue-on-error: true
        
      - name: Security audit
        run: npm audit --audit-level moderate
        continue-on-error: true

  build:
    needs: [test]
    if: always() && (needs.test.result == 'success' || needs.test.result == 'skipped')
    runs-on: ubuntu-latest
    name: EAS Build - ${{ inputs.platform || 'all' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install EAS CLI
        run: npm install -g eas-cli@${{ env.EXPO_CLI_VERSION }}
        
      - name: Authenticate with Expo
        run: eas whoami
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          
      - name: Show project info
        run: eas project:info
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          
      - name: Build for Android
        if: inputs.platform == 'android' || inputs.platform == 'all' || !inputs.platform
        run: |
          echo "Building Android with profile: ${{ inputs.profile || 'production' }}"
          eas build --platform android \
            --profile ${{ inputs.profile || 'production' }} \
            --non-interactive \
            --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          
      - name: Build for iOS
        if: inputs.platform == 'ios' || inputs.platform == 'all' || !inputs.platform
        run: |
          echo "Building iOS with profile: ${{ inputs.profile || 'production' }}"
          eas build --platform ios \
            --profile ${{ inputs.profile || 'production' }} \
            --non-interactive \
            --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          
      - name: Push OTA Update
        if: success() && (inputs.profile == 'preview' || inputs.profile == 'production' || (!inputs.profile && github.ref == 'refs/heads/main'))
        run: |
          echo "Pushing OTA update for branch: ${{ inputs.profile || 'production' }}"
          eas update --branch ${{ inputs.profile || 'production' }} \
            --message "Auto OTA update from commit ${{ github.sha }}"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true
          
      - name: List Recent Builds
        if: always()
        run: eas build:list --limit 5
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          
      - name: Build Summary
        if: always()
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: ${{ inputs.platform || 'all' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Profile**: ${{ inputs.profile || 'production' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY

  notification:
    needs: [test, build]
    if: always()
    runs-on: ubuntu-latest
    name: Notification
    
    steps:
      - name: Success Notification
        if: needs.build.result == 'success'
        run: |
          echo "✅ Build completed successfully!"
          echo "Platform: ${{ inputs.platform || 'all' }}"
          echo "Profile: ${{ inputs.profile || 'production' }}"
          
      - name: Failure Notification
        if: needs.build.result == 'failure'
        run: |
          echo "❌ Build failed!"
          echo "Check the logs for more details."
          exit 1
